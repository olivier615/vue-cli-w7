{"version":3,"file":"js/606.915c2610.js","mappings":"yHAuCCA,GAOA,MAAO,CAKNA,IAPDA,EAAMA,GAAO,IAAIC,IAehBC,GAAAA,SAA6BC,EAAWC,GACvC,IAAMC,EAAmDL,EAAKM,IAAIH,GAC9DE,EACHA,EAASE,KAAKH,GAGdJ,EAAKQ,IAAIL,EAAM,CAACC,KAWlBK,IAAAA,SAA8BN,EAAWC,GACxC,IAAMC,EAAmDL,EAAKM,IAAIH,GAC9DE,IACCD,EACHC,EAASK,OAAOL,EAASM,QAAQP,KAAa,EAAG,GAGjDJ,EAAKQ,IAAIL,EAAM,MAelBS,KAAAA,SAA+BT,EAAWU,GACzC,IAAIR,EAAWL,EAAKM,IAAIH,GACpBE,GACFA,EACCS,QACAC,KAAI,SAACX,GACLA,EAAQS,OAIXR,EAAWL,EAAKM,IAAI,OAElBD,EACCS,QACAC,KAAI,SAACX,GACLA,EAAQD,EAAMU,Q,gCChHpB,MAAMG,EAAUC,IAChB,S,mGCDEC,EAAAA,EAAAA,GAAa,UAAT,QAAI,G,GACHC,MAAM,a,GACJA,MAAM,OAAOC,MAAA,iB,mBAEXD,MAAM,a,GACLA,MAAM,c,GACPA,MAAM,a,GACNA,MAAM,a,6DAPfE,GACAH,EAAAA,EAAAA,GAWM,MAXN,EAWM,EAVJA,EAAAA,EAAAA,GAQM,MARN,EAQM,EAPJA,EAAAA,EAAAA,GAAuE,OAAjEI,IAAKC,EAAAA,QAAQC,SAAUL,MAAM,eAAgBM,IAAKF,EAAAA,QAAQG,OAAhE,WACAR,EAAAA,EAAAA,GAKM,MALN,EAKM,EAJJA,EAAAA,EAAAA,GAA6C,KAA7C,GAA6CS,EAAAA,EAAAA,IAApBJ,EAAAA,QAAQG,OAAK,IACtCR,EAAAA,EAAAA,GAAgD,IAAhD,GAAgDS,EAAAA,EAAAA,IAAzBJ,EAAAA,QAAQK,aAAW,IAC1CV,EAAAA,EAAAA,GAA0C,IAA1C,GAA0CS,EAAAA,EAAAA,IAAnBJ,EAAAA,QAAQM,OAAK,IACpCX,EAAAA,EAAAA,GAAiF,UAAzEC,MAAM,kBAAmBW,QAAK,eAAEC,EAAAA,cAAcR,EAAAA,QAAQS,MAAK,cAGvEd,EAAAA,EAAAA,GAAyE,UAAjEC,MAAM,kBAAmBW,QAAK,oBAAEC,EAAAA,oBAAAA,EAAAA,sBAAAA,KAAoB,WAV9D,I,aAgBF,GACEE,OACE,MAAO,CACLC,QAAS,GACTC,UAAW,KAGfC,QAAS,CACPC,aACE,MAAM,GAAEL,GAAOM,KAAKC,OAAOC,OAC3BF,KAAKG,MACF,gEAAqET,KAErEU,MAAMC,IACLL,KAAKJ,QAAUS,EAAIV,KAAKC,WAEzBU,OAAOC,IACNC,QAAQC,IAAIF,OAGlBG,cAAehB,EAAIiB,EAAM,GACvB,MAAMhB,EAAO,CACXiB,WAAYlB,EACZiB,IAAKA,GAEPX,KAAKH,UAAYH,EACjBM,KAAKG,MACFU,KAAM,4DAAkE,CACvElB,KAAAA,IAEDS,MAAMC,IAELL,KAAKH,UAAY,GACjBnB,EAAAA,EAAAA,KAAa,eAEd4B,OAAOC,IACNC,QAAQC,IAAIF,GACZP,KAAKH,UAAY,OAGvBiB,qBACEd,KAAKe,QAAQC,MAAM,KAGvBC,UACEjB,KAAKD,e,QC1DT,MAAMmB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE","sources":["webpack://cli-demo/../src/index.ts","webpack://cli-demo/./src/libs/emitter.js","webpack://cli-demo/./src/views/ProductView.vue","webpack://cli-demo/./src/views/ProductView.vue?f743"],"sourcesContent":["export type EventType = string | symbol;\n\n// An event handler can take an optional event argument\n// and should not return a value\nexport type Handler<T = unknown> = (event: T) => void;\nexport type WildcardHandler<T = Record<string, unknown>> = (\n\ttype: keyof T,\n\tevent: T[keyof T]\n) => void;\n\n// An array of all currently registered event handlers for a type\nexport type EventHandlerList<T = unknown> = Array<Handler<T>>;\nexport type WildCardEventHandlerList<T = Record<string, unknown>> = Array<WildcardHandler<T>>;\n\n// A map of event types and their corresponding event handlers.\nexport type EventHandlerMap<Events extends Record<EventType, unknown>> = Map<\n\tkeyof Events | '*',\n\tEventHandlerList<Events[keyof Events]> | WildCardEventHandlerList<Events>\n>;\n\nexport interface Emitter<Events extends Record<EventType, unknown>> {\n\tall: EventHandlerMap<Events>;\n\n\ton<Key extends keyof Events>(type: Key, handler: Handler<Events[Key]>): void;\n\ton(type: '*', handler: WildcardHandler<Events>): void;\n\n\toff<Key extends keyof Events>(type: Key, handler?: Handler<Events[Key]>): void;\n\toff(type: '*', handler: WildcardHandler<Events>): void;\n\n\temit<Key extends keyof Events>(type: Key, event: Events[Key]): void;\n\temit<Key extends keyof Events>(type: undefined extends Events[Key] ? Key : never): void;\n}\n\n/**\n * Mitt: Tiny (~200b) functional event emitter / pubsub.\n * @name mitt\n * @returns {Mitt}\n */\nexport default function mitt<Events extends Record<EventType, unknown>>(\n\tall?: EventHandlerMap<Events>\n): Emitter<Events> {\n\ttype GenericEventHandler =\n\t\t| Handler<Events[keyof Events]>\n\t\t| WildcardHandler<Events>;\n\tall = all || new Map();\n\n\treturn {\n\n\t\t/**\n\t\t * A Map of event names to registered handler functions.\n\t\t */\n\t\tall,\n\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t * @param {string|symbol} type Type of event to listen for, or `'*'` for all events\n\t\t * @param {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton<Key extends keyof Events>(type: Key, handler: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\thandlers.push(handler);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tall!.set(type, [handler] as EventHandlerList<Events[keyof Events]>);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t * If `handler` is omitted, all handlers of the given type are removed.\n\t\t * @param {string|symbol} type Type of event to unregister `handler` from, or `'*'`\n\t\t * @param {Function} [handler] Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff<Key extends keyof Events>(type: Key, handler?: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\tif (handler) {\n\t\t\t\t\thandlers.splice(handlers.indexOf(handler) >>> 0, 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tall!.set(type, []);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `'*'` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * Note: Manually firing '*' handlers is not supported.\n\t\t *\n\t\t * @param {string|symbol} type The event type to invoke\n\t\t * @param {Any} [evt] Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit<Key extends keyof Events>(type: Key, evt?: Events[Key]) {\n\t\t\tlet handlers = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as EventHandlerList<Events[keyof Events]>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(evt!);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\thandlers = all!.get('*');\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as WildCardEventHandlerList<Events>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(type, evt!);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n","import mitt from 'mitt'\r\nconst emitter = mitt()\r\nexport default emitter\r\n","<template>\r\n  <h2>單一產品</h2>\r\n  <div class=\"container\">\r\n    <div class=\"card\" style=\"width: 18rem;\">\r\n      <img :src=\"product.imageUrl\" class=\"card-img-top\" :alt=\"product.title\">\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\">{{product.title}}</h5>\r\n        <p class=\"card-text\">{{product.description}}</p>\r\n        <p class=\"card-text\">{{product.price}}</p>\r\n        <button class=\"btn btn-primary\" @click=\"addItemToCart(product.id)\">加入購物車</button>\r\n      </div>\r\n    </div>\r\n    <button class=\"btn btn-primary\" @click=\"backToPreviousPage\">回上一頁</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport emitter from '@/libs/emitter.js'\r\nexport default {\r\n  data () {\r\n    return {\r\n      product: {},\r\n      isLoading: ''\r\n    }\r\n  },\r\n  methods: {\r\n    getProduct () {\r\n      const { id } = this.$route.params\r\n      this.$http(\r\n        `${process.env.VUE_APP_API}/api/${process.env.VUE_APP_PATH}/product/${id}`\r\n      )\r\n        .then((res) => {\r\n          this.product = res.data.product\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n        })\r\n    },\r\n    addItemToCart (id, qty = 1) {\r\n      const data = {\r\n        product_id: id,\r\n        qty: qty\r\n      }\r\n      this.isLoading = id\r\n      this.$http\r\n        .post(`${process.env.VUE_APP_API}/api/${process.env.VUE_APP_PATH}/cart`, {\r\n          data\r\n        })\r\n        .then((res) => {\r\n          // this.getCartData()\r\n          this.isLoading = ''\r\n          emitter.emit('get-cart')\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n          this.isLoading = ''\r\n        })\r\n    },\r\n    backToPreviousPage () {\r\n      this.$router.back(-1)\r\n    }\r\n  },\r\n  mounted () {\r\n    this.getProduct()\r\n  }\r\n}\r\n</script>\r\n","import { render } from \"./ProductView.vue?vue&type=template&id=18e3f400\"\nimport script from \"./ProductView.vue?vue&type=script&lang=js\"\nexport * from \"./ProductView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\User\\\\Desktop\\\\cli-demo - w7\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["all","Map","on","type","handler","handlers","get","push","set","off","splice","indexOf","emit","evt","slice","map","emitter","mitt","_createElementVNode","class","style","_hoisted_1","src","$data","imageUrl","alt","title","_toDisplayString","description","price","onClick","$options","id","data","product","isLoading","methods","getProduct","this","$route","params","$http","then","res","catch","err","console","log","addItemToCart","qty","product_id","post","backToPreviousPage","$router","back","mounted","__exports__","render"],"sourceRoot":""}